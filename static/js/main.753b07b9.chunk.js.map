{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","components/StickyHeader/StickyHeader.js","App.js","index.js"],"names":["Card","props","className","alt","id","src","image","onClick","clickCard","Wrapper","children","Header","StickyHeader","score","highScore","cards","require","App","state","clicked","gameOver","shuffleArray","array","i","length","j","Math","floor","random","includes","resetGame","clickedArray","incrementScore","setState","newScore","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"40BASeA,MANf,SAAcC,GACV,OACQ,yBAAKC,UAAU,cAAcC,IAAKF,EAAMG,GAAIC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,UAAUP,EAAMG,Q,MCEhGK,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,WCW1BC,MAbf,WACI,OACA,yBAAKT,UAAU,aACX,wBAAIA,UAAU,aAAd,gBAGA,uBAAGA,UAAU,QAAb,uE,MCQOU,MAbf,SAAuBX,GACnB,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,UACf,qCAAU,0BAAME,GAAG,SAASH,EAAMY,SAElC,yBAAKX,UAAU,QACf,0CAAe,0BAAME,GAAG,cAAcH,EAAMa,eCJlDC,EAAQC,EAAQ,IAiFPC,E,2MA7EbC,MAAQ,CACNH,QACAF,MAAO,EACPC,UAAW,EACXK,QAAS,GACTC,UAAU,G,EAGZC,aAAe,SAACC,GACd,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,O,EAM7CjB,UAAY,SAACJ,GACX,GAAK,EAAKc,MAAMC,QAAQU,SAASzB,GAQ1B,EAAK0B,gBARyB,CAEnC,IAAIC,EAAY,sBAAO,EAAKb,MAAMC,SAAlB,CAA2Bf,IAC3C,EAAK4B,iBACL,EAAKC,SAAS,CACZd,QAASY,IAEX,EAAKV,aAAa,EAAKH,MAAMH,S,EAKjCiB,eAAiB,WACf,IAAIE,EAAW,EAAKhB,MAAML,MAAQ,EAClC,EAAKoB,SAAS,CACZpB,MAAOqB,IAELA,EAAW,EAAKhB,MAAMJ,WACxB,EAAKmB,SAAS,CACZnB,UAAWoB,IAGE,KAAbA,IACF,EAAKD,SAAS,CACZb,UAAU,IAEZ,EAAKU,c,EAITA,UAAY,WACV,EAAKG,SAAS,CACZpB,MAAO,EACPC,UAAW,EAAKI,MAAMJ,UACtBK,QAAS,GACTC,UAAU,IAEZ,EAAKC,aAAa,EAAKH,MAAMH,Q,wEAGrB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcF,MAAOsB,KAAKjB,MAAML,MAAOC,UAAWqB,KAAKjB,MAAMJ,YAC7D,kBAAC,EAAD,MACA,yBAAKZ,UAAU,iBACZiC,KAAKjB,MAAMH,MAAMqB,KAAI,SAAAC,GAAM,OAC1B,kBAAC,EAAD,CACEjC,GAAIiC,EAAOjC,GACXkC,IAAKD,EAAOjC,GACZE,MAAO+B,EAAO/B,MACdE,UAAW,EAAKA,qB,GArEZ+B,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.753b07b9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props){\n    return (\n            <img className=\"memory-card\" alt={props.id} src={props.image} onClick={() => props.clickCard(props.id)}/>\n    )\n}\n\nexport default Card ","import React from \"react\";\nimport \"./style.css\"\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\n\nfunction Header() {\n    return (\n    <div className=\"jumbotron\">\n        <h1 className=\"display-4\">\n            Clicky-Game!\n        </h1>\n        <p className=\"lead\">\n            Click on an image to earn points, but don't click more than once!\n        </p>\n    </div>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport \"./style.css\"\n\nfunction StickyHeader (props) {\n    return (\n        <nav className=\"navbar fixed-top\">\n            <div className=\"scores\">\n            <p>Score: <span id=\"score\">{props.score}</span></p>\n            </div>\n            <div className=\"high\">\n            <p>High Score: <span id=\"high-score\">{props.highScore}</span></p>\n            </div>\n        </nav>\n    )\n}\n\nexport default StickyHeader","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './components/Card/Card';\nimport Wrapper from \"./components/Wrapper/Wrapper\"\nimport Header from \"./components/Header/Header\"\nimport StickyHeader from \"./components/StickyHeader/StickyHeader\"\nconst cards = require(\"./cards.json\")\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    highScore: 0,\n    clicked: [],\n    gameOver: false\n  }\n\n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  clickCard = (id) => {\n    if (!this.state.clicked.includes(id)){\n      // let clickedArray = this.state.clicked.push(id)\n      let clickedArray = [...this.state.clicked, id]\n      this.incrementScore();\n      this.setState({\n        clicked: clickedArray\n      })\n      this.shuffleArray(this.state.cards)\n    } else this.resetGame()\n\n  }\n\n  incrementScore = () => {\n    let newScore = this.state.score + 1\n    this.setState({\n      score: newScore\n    })\n    if (newScore > this.state.highScore){\n      this.setState({\n        highScore: newScore\n      })\n    }\n    if (newScore === 12){\n      this.setState({\n        gameOver: true\n      })\n      this.resetGame()\n    }\n  }\n\n  resetGame = () => {\n    this.setState({\n      score: 0,\n      highScore: this.state.highScore,\n      clicked: [],\n      gameOver: false\n    })\n    this.shuffleArray(this.state.cards)\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <StickyHeader score={this.state.score} highScore={this.state.highScore} />\n        <Header />\n        <div className=\"img-container\">\n          {this.state.cards.map(friend => (\n            <Card\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n              clickCard={this.clickCard}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    )\n\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}